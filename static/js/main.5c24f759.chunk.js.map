{"version":3,"sources":["componenets/Header.js","componenets/SearchMovie.js","App.js","reportWebVitals.js","index.js"],"names":["Header","SearchMovie","useState","movie","setMovie","name","setName","fetchapi","a","fetch","response","json","resjson","className","type","value","onChange","e","target","onClick","Title","Actors","imdbRating","Year","Country","src","Poster","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAUeA,MARf,WACI,OACI,8BACI,oD,oCC+CGC,MAhDf,WAAwB,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEMF,mBAAS,IAFf,mBAEZG,EAFY,KAELC,EAFK,KAGbC,EAAQ,uCAAG,8BAAAC,EAAA,sEACUC,MAAM,6BAAD,OAA8BJ,EAA9B,qBADf,cACPK,EADO,gBAESA,EAASC,OAFlB,OAEPC,EAFO,OAGbR,EAASQ,GAHI,2CAAH,qDAMd,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAf,SACA,uBAAOA,UAAU,eAAeC,KAAO,OAAOC,MAASV,EAAMW,SAAU,SAACC,GAAD,OAAKX,EAAQW,EAAEC,OAAOH,YAE7F,uBACA,wBAAQF,UAAU,yBAAyBM,QAAUZ,EAArD,qBAEGJ,EAIF,mCACEA,EAAMiB,MAMT,qCACI,qBAAIP,UAAU,oBAAd,UAAmCV,EAAMiB,MAAzC,OAEA,sBAAKP,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACA,kCAAI,0CAAJ,OAA4BV,EAAMkB,OAAlC,OACA,kCAAI,2CAAJ,OAA6BlB,EAAMmB,WAAnC,OACA,8BAAG,gDAAH,MAAgCnB,EAAMoB,KAAtC,OACA,kCAAI,4CAAJ,OAA8BpB,EAAMqB,QAApC,UAGA,qBAAKX,UAAU,WAAWY,IAAKtB,EAAMuB,eAfzC,oBAAIb,UAAU,mBAAd,gDANA,iCCRDc,MAXf,WACE,OACE,qCACA,qBAAKd,UAAU,MAAf,SACA,cAAC,EAAD,MAEA,cAAC,EAAD,QCGWe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5c24f759.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <h1> Type any movie</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{useState} from 'react'\r\nimport './css/movie.css'\r\n\r\n\r\nfunction SearchMovie() {\r\n    const [movie, setMovie] = useState('')\r\n    const [name , setName] = useState('')\r\n    const fetchapi = async()=>{\r\n        const response = await fetch(`http://www.omdbapi.com/?t=${name}&apikey=dbe00991`)\r\n        const resjson = await response.json()\r\n        setMovie(resjson)\r\n    }\r\n    \r\n    return (\r\n        <div className='arham' >\r\n            <div className='w-25 arham2' >\r\n            <input className='form-control' type = 'text' value = {name} onChange={(e)=>setName(e.target.value)} />\r\n            </div>\r\n            <br/>\r\n            <button className='btn btn-primary button' onClick ={fetchapi} >search </button> \r\n\r\n            { !movie ? \r\n                <>\r\n                </>\r\n            :\r\n            (<>\r\n            { !movie.Title ?\r\n             (  \r\n                <h1 className='mt-5 text-center' > Please Enter Correct Movie Name</h1>\r\n             ) \r\n             :\r\n            (\r\n            <>                   \r\n                <h3 className='mt-5 text-center '>{movie.Title} </h3>\r\n\r\n                <div className='row' >\r\n                    <div className='col-md-8 '>\r\n                    <p> <span>Actors</span> :  {movie.Actors} </p> \r\n                    <p> <span>Ratings</span> :  {movie.imdbRating} </p>\r\n                    <p><span>Release Date</span>:  {movie.Year} </p>\r\n                    <p> <span> Country</span> :  {movie.Country} </p>\r\n                    </div>\r\n\r\n                    <img className='col-md-4' src={movie.Poster} />\r\n                </div>\r\n            </>\r\n            )}\r\n            </>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchMovie\r\n","import './App.css';\r\nimport Header from './componenets/Header'\r\nimport SearchMovie from './componenets/SearchMovie'\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <div className='App' >\r\n    <Header/>\r\n    </div>\r\n    <SearchMovie/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}